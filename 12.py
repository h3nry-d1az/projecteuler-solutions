r"""# Multiples of 3 or 5
## Problem Statement
The sequence of triangle numbers is generated by adding the natural numbers. So the $7$<sup>th</sup> triangle number would be $1 + 2 + 3 + 4 + 5 + 6 + 7 = 28$. The first ten terms would be: $$1, 3, 6, 10, 15, 21, 28, 36, 45, 55, \dots$$

Let us list the factors of the first seven triangle numbers:
\begin{align}
\mathbf 1 &amp;\colon 1\\\\
\mathbf 3 &amp;\colon 1,3\\\\
\mathbf 6 &amp;\colon 1,2,3,6\\\\
\mathbf{10} &amp;\colon 1,2,5,10\\\\
\mathbf{15} &amp;\colon 1,3,5,15\\\\
\mathbf{21} &amp;\colon 1,3,7,21\\\\
\mathbf{28} &amp;\colon 1,2,4,7,14,28
\end{align}

We can see that $28$ is the first triangle number to have over five divisors.

What is the value of the first triangle number to have over five hundred divisors?

## Solution
Recall that $t_n = 1+2+3+\ldots+n$, it can be easily proven by induction that $t_n = n(n+1)/2$ as well. We thus only need a good factoring function, which is implemented here as `factor`, because the number of divisors of a number obeys the following formula (which can be derived from the prime factorization of $n$). $$\sigma(n) = \sum_{d\mid n} d = \prod_{m=1}^{k} (\alpha_m + 1),\qquad\text{where}\qquad n = {p_1}^{\alpha_1}{p_2}^{\alpha_2}{p_3}^{\alpha_3}\ldots{p_k}^{\alpha_k}$$

With all these requisites, one may simply increase $n$ by one until $\sigma(t_n)>500$, which happens firstly for $t_n=\boxed{76576500}$."""

from math import sqrt, floor, prod

__factors = {}
def factor(n: int) -> set:
  r"""Factors $n$ into its prime factors, represented as a set with tuples of the form $(p_k, \alpha_k)$."""
  factors = set()
  m = n
  for pk in range(2, floor(sqrt(n))+1):
    if n % pk == 0:
      alphak = 0
      while m % pk == 0:
        alphak += 1
        m //= pk
      factors.add((pk, alphak))
      factors |= factor(m)
      break
  if m == n and m != 1: factors.add((m, 1))
  __factors[n] = factors
  return factors

tn = lambda n: n*(n+1)//2
tn.__doc__ = """Returns the $n$th triangular number."""

def solution() -> None:
  """Solution entry point."""
  n = 7
  while prod(map(lambda t: t[1] + 1, factor(tn(n)))) < 500: n += 1
  print(tn(n)) # 76576500

if __name__ == '__main__': solution()